Minimize XOR




Given two positive integers num1 and num2, find the positive integer x such that:

x has the same number of set bits as num2, and
The value x XOR num1 is minimal.
Note that XOR is the bitwise XOR operation.

Return the integer x. The test cases are generated such that x is uniquely determined.

The number of set bits of an integer is the number of 1's in its binary representation.













class Solution {
public:
    int minimizeXor(int num1, int num2) {
        int n=__builtin_popcount(num2);
        int n2=__builtin_popcount(num1);
        if(n>n2){
            int ans=num1;
            int count=n-n2;
            int i=0;
            while(count){
            if(!(num1>>i&1)){
                ans+=(1<<i);
                count--;
            }
            i++;
        }
            return ans;
        }
        int count=n2-n;
        int i=0;
        int ans=0;
        while(count){
            if(num1>>i&1){
                ans+=(1<<i);
                count--;
            }
            i++;
        }
        return ans^num1;

    }
};

