2874. Maximum Value of an Ordered Triplet II



You are given a 0-indexed integer array nums.

Return the maximum value over all triplets of indices (i, j, k) such that i < j < k. If all such triplets have a negative value, return 0.

The value of a triplet of indices (i, j, k) is equal to (nums[i] - nums[j]) * nums[k].






class Solution 
{
public:
    long long maximumTripletValue(vector<int>& nums) 
    {
        long long ans = LLONG_MIN;
        int n = nums.size();
        vector<int>leftmax(n , 0) , rightmax(n , 0);
        leftmax[0] = nums[0];
        rightmax[n - 1] = nums[n - 1];

        for(int i = 1; i < n; i++)
            {
                leftmax[i] = max(nums[i] , leftmax[i - 1]);
            }

        for(int i = n - 2; i >= 0; i--)
            {
                rightmax[i] = max(rightmax[i + 1] , nums[i]);
            }

        for(int i = 1; i < n - 1; i++)
        {
            long long curr = (long long)(leftmax[i - 1] - nums[i]) * rightmax[i + 1];
            ans = max(ans , curr);
        }
        return max(ans , 0LL);
    }
};
