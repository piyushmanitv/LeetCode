2342. Max Sum of a Pair With Equal Sum of Digits




  
You are given a 0-indexed array nums consisting of positive
  integers. You can choose two indices i and j, such that i != j, and
    the sum of digits of the number nums[i] is equal to that of nums[j].

Return the maximum value of nums[i] + nums[j] that you can obtain over 
    all possible indices i and j that satisfy the conditions.






    class Solution {
public:
    int maximumSum(vector<int>& nums) {
        int result = -1;
        // Array to map digit sums to the largest element with that sum
        // (82 to cover all possible sums from 0 to 81)
        int digitMapping[82] = {};

        for (int element : nums) {
            int digitSum = 0;

            // Calculate the digit sum of the current element
            for (int currValue = element; currValue; currValue /= 10) {
                int currDigit = currValue % 10;
                digitSum += currDigit;
            }

            // Check if there is already an element with the same digit sum
            if (digitMapping[digitSum] > 0) {
                // Update the result if the sum of the current and mapped
                // element is greater
                result = max(result, digitMapping[digitSum] + element);
            }

            // Update the mapping to store the larger of the current or previous
            // element for this digit sum
            digitMapping[digitSum] = max(digitMapping[digitSum], element);
        }

        return result;
    }
};
