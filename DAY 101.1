1161. Maximum Level Sum of a Binary Tree






Given the root of a binary tree, the level of its root is 1, the level of its children is 2, and so on.

Return the smallest level x such that the sum of all the values of nodes at level x is maximal.









/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
        int maxLevelSum(TreeNode* root) {
            vector<int> record(1,0);
            bfs(root, record, 0);
            int index;
            long long _max = LONG_MIN;
            for (int i=0;i<record.size();i++){
                if (record[i]>_max){
                    _max = record[i];
                    index = i;
                }
            }
            return index+1;
        }
        void bfs(TreeNode* root, vector<int>& record, int level){
            if (!root) return;
            if (record.size() <= level) record.push_back(root->val);
            else record[level]+= root->val;
            if (root->right) bfs(root->right, record, level+1);
            if (root->left) bfs(root->left, record, level+1);
        }
    };
