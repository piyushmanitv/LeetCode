16. 3Sum Closest




Given an integer array nums of length n and an 
integer target, find three integers in nums such 
that the sum is closest to target.

Return the sum of the three integers.

You may assume that each input would have exactly one solution.





class Solution {
public:
    int threeSumClosest(std::vector<int>& nums, int target) {
        std::sort(nums.begin(), nums.end());
        int n = nums.size();
        int minDiff = INT_MAX;
        int ans = 0;

        for (int i = 0; i < n - 2; ++i) {
            int low = i + 1, high = n - 1;
            while (low < high) {
                int temp = nums[i] + nums[low] + nums[high];
                int diff = std::abs(target - temp);
                if (diff < minDiff) {
                    ans = temp;
                    minDiff = diff;
                }
                if (temp == target) {
                    return target;
                } else if (temp > target) {
                    --high;
                } else {
                    ++low;
                }
            }
        }
        return ans;
    }
};
