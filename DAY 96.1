1448. Count Good Nodes in Binary Tree





Given a binary tree root, a node X in the tree is named good if in the path from root to X there are no nodes with a value greater than X.

Return the number of good nodes in the binary tree.












/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    Solution() {
        std::ios_base::sync_with_stdio(false);
        std::cin.tie(nullptr);
        std::cout.tie(nullptr);
    }

    inline void solution(TreeNode* node, int maximum) {
        if(!node) return;
        if(node->val >= maximum) {
            maximum = node->val;
            answer++;
        }

        solution(node->left, maximum);
        solution(node->right, maximum);

        node->left = node->right = nullptr;
    }

    int goodNodes(TreeNode* root) {
        solution(root, root->val);
        return answer;
    }

    int answer = 0;
};
