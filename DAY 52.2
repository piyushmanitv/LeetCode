97. Interleaving String




Given strings s1, s2, and s3, find whether s3 is formed by an interleaving of s1 and s2.

An interleaving of two strings s and t is a configuration where s and t are divided into n and m 
substrings
 respectively, such that:

s = s1 + s2 + ... + sn
t = t1 + t2 + ... + tm
|n - m| <= 1
The interleaving is s1 + t1 + s2 + t2 + s3 + t3 + ... or t1 + s1 + t2 + s2 + t3 + s3 + ...
Note: a + b is the concatenation of strings a and b.








class Solution {
public:
    bool isInterleave(string s1, string s2, string s3) {
        int n = s1.size(), m = s2.size(), l = s3.size();
        if (n + m != l) return false;
        vector<bool> dp(m + 1, 0);
        dp[0] = true;
        for (int j = 0; j < m; j++)
            dp[j + 1] = dp[j] && s2[j] == s3[j];
        for (int i = 0; i < n; i++) {
            dp[0] = dp[0] && s1[i] == s3[i];
            for (int j = 0; j < m; j++)
                dp[j + 1] = (dp[j + 1] && s1[i] == s3[i + j + 1])
                                    || (dp[j] && s2[j] == s3[i + j + 1]);
        }
        return dp[m];
    }
};
