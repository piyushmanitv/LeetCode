1726. Tuple with Same Product




Given an array nums of distinct positive integers, 
return the number of tuples (a, b, c, d) such that
a * b = c * d where a, b, c, and d are elements of 
nums, and a != b != c != d.








#include <unordered_map>
#include <vector>

class Solution {
public:
    int tupleSameProduct(std::vector<int>& nums) {
        std::unordered_map<int, int> productCount;
        int count = 0;

        int n = nums.size();
        for (int i = 0; i < n; ++i) {
            for (int j = i + 1; j < n; ++j) {
                int product = nums[i] * nums[j];

                // If this product has been seen before, each occurrence creates 8 tuples
                count += productCount[product] * 8;

                // Increment product frequency
                ++productCount[product];
            }
        }

        return count;
    }
};
