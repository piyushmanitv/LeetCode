STRING



20. Valid Parentheses




Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Every close bracket has a corresponding open bracket of the same type.







class Solution {
public:
    bool isValid(string s) {
        stack<char> st; 
        unordered_map<char, char> hash = {{')', '('}, {']', '['}, {'}', '{'}};
        
        for (char c : s) {
            if (hash.count(c)) { 
                if (!st.empty() && st.top() == hash[c]) {
                    st.pop(); 
                } else {
                    return false; 
                }
            } else {
                st.push(c); 
            }
        }
        return st.empty();
    }
};
