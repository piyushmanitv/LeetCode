INTERVAL



435. Non-overlapping Intervals




Given an array of intervals intervals where intervals[i] = [starti, endi], 
return the minimum number of intervals you need to remove to make the rest 
of the intervals non-overlapping.

Note that intervals which only touch at a point are non-overlapping. For 
example, [1, 2] and [2, 3] are non-overlapping.








class Solution {
public:
    int eraseOverlapIntervals(vector<vector<int>>& intervals) {
        if (intervals.empty()) return 0; 
        sort(intervals.begin(), intervals.end(), [](const vector<int>& a, const vector<int>& b) {
            return a[1] < b[1];
        });

        int count = 0;
        int prevEnd = intervals[0][1]; 

        for (int i = 1; i < intervals.size(); i++) {
            if (intervals[i][0] < prevEnd) {
                count++; 
            } else {
                prevEnd = intervals[i][1];
            }
        }
        return count;
    }
};
