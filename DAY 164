2616. Minimize the Maximum Difference of Pairs


You are given a 0-indexed integer array nums and an integer p. Find p pairs of indices of nums such that the maximum difference amongst all the pairs is minimized. Also, ensure no index appears more than once amongst the p pairs.

Note that for a pair of elements at the index i and j, the difference of this pair is |nums[i] - nums[j]|, where |x| represents the absolute value of x.

Return the minimum maximum difference among all p pairs. We define the maximum of an empty set to be zero.









class Solution {
public:
    int minimizeMax(vector<int>& nums, int p) {
        int n=nums.size();
        sort(nums.begin(),nums.end());
        int start=0;
        int end=nums[n-1]-nums[0];
        int ans=-1;
        while(start<=end){
            int mid=(start+(end-start)/2);
            int count=0;
            int i=0;
            while(i<n-1){
                if(nums[i+1]-nums[i]<=mid){
                    count++;
                    i+=2;
                }
                else{
                    i++;
                }
            }
            if(count>=p){
                ans=mid;
                end=mid-1;
            }
            else{
                start=mid+1;
            }
        }
        return ans;
    }
};
