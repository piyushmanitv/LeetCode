51. N-Queens







The n-queens puzzle is the problem of placing n 
queens on an n x n chessboard such that no two queens attack each other.

Given an integer n, return all distinct solutions 
to the n-queens puzzle. You may return the answer in any order.

Each solution contains a distinct board configuration of
the n-queens' placement, where 'Q' and '.' both indicate a queen and an empty space, respectively.






class Solution {
public:
    vector<vector<string>> solveNQueens(int n) {
        vector<vector<string>> res;
        vector<int> pos(n, -1);
        solve(0, n, pos, res);
        return res;
    }

private:
    void solve(int row, int n, vector<int>& pos, vector<vector<string>>& res) {
        if (row == n) {
            vector<string> board(n, string(n, '.'));
            for (int i = 0; i < n; ++i) board[i][pos[i]] = 'Q';
            res.push_back(board);
            return;
        }
        for (int col = 0; col < n; ++col) {
            bool valid = true;
            for (int i = 0; i < row; ++i) {
                if (pos[i] == col || abs(pos[i] - col) == abs(i - row)) {
                    valid = false;
                    break;
                }
            }
            if (valid) {
                pos[row] = col;
                solve(row + 1, n, pos, res);
            }
        }
    }
};
