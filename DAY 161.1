22. Generate Parentheses




Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.








class Solution {
public:
    void solve(vector<string>& ans, string& str, int open, int close, int n){
        
        if(open + close == 2*n){
            ans.push_back(str);
            return;
        }
        if(open < n){
            str.push_back('(');
            solve(ans, str, open+1, close, n);
            str.pop_back();
        }
        if(close < open){
            str.push_back(')');
            solve(ans, str, open, close+1, n);
            str.pop_back();
        }
    }
    
    vector<string> generateParenthesis(int n) {
        
        int open {0};
        int close {0};
        string str = "";
        vector<string> ans;
        if(!n) return ans;
        solve(ans, str, open, close, n);
        return ans;
    }
};
