2044. Count Number of Maximum Bitwise-OR Subsets
Solved
Medium
Topics
premium lock icon
Companies
Hint
Given an integer array nums, find the maximum possible bitwise OR of a subset of nums and return the number of different non-empty subsets with the maximum bitwise OR.

An array a is a subset of an array b if a can be obtained from b by deleting some (possibly zero) elements of b. Two subsets are considered different if the indices of the elements chosen are different.

The bitwise OR of an array a is equal to a[0] OR a[1] OR ... OR a[a.length - 1] (0-indexed)











class Solution {
    private:
    int BackTrack(vector<int>& nums, int idx, int curOrSum, int maxOrSum)
    {
        if (curOrSum == maxOrSum)
        {
            return pow(2, (nums.size() - idx));
        }
        else if (idx >= nums.size())
        {
            return 0;
        }


        return this->BackTrack(nums, idx + 1, curOrSum, maxOrSum) + this->BackTrack(nums, idx + 1, curOrSum | nums[idx], maxOrSum);
    } 
    
public:
    int countMaxOrSubsets(vector<int>& nums) {
       int maxOrNum = 0;

        for (int i = 0; i < nums.size(); ++i)
        {
            maxOrNum |= nums[i];
        }

        sort(nums.begin(), nums.end(), greater<int>());

        return this->BackTrack(nums, 0, 0, maxOrNum); 
    }
};
