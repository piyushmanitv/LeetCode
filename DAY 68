CONTEST QUESTION 



Q1. Fruits Into Baskets II





You are given two arrays of integers, fruits and baskets, each of length n, 
where fruits[i] represents the quantity of the ith type of fruit, and
baskets[j] represents the capacity of the jth basket.

From left to right, place the fruits according to these rules:

Each fruit type must be placed in the leftmost available basket with a
capacity greater than or equal to the quantity of that fruit type.
Each basket can hold only one type of fruit.
If a fruit type cannot be placed in any basket, it remains unplaced.
Return the number of fruit types that remain unplaced after all possible
allocations are made.









class Solution {
public:
    int numOfUnplacedFruits(vector<int>& fruits, vector<int>& baskets) {
    int unplacedCount = 0;
        
        vector<bool> used(baskets.size(), false);
        
        for (int fruitQuantity : fruits) {
            bool placed = false;
            
            for (int i = 0; i < baskets.size(); i++) {
                if (!used[i] && baskets[i] >= fruitQuantity) {
                    used[i] = true; 
                    baskets[i] -= fruitQuantity; 
                    placed = true;
                    break;
                }
            }           
            if (!placed) {
                unplacedCount++;
            }
        }        
        return unplacedCount;
    }
};
